import{b as u}from"./chunk-FPQQBUCR.js";import{b as h}from"./chunk-PVO7PMX5.js";import{B as c,Z as p,ca as l,m as a}from"./chunk-HGSCEON2.js";var n=class extends Error{};n.prototype.name="InvalidTokenError";function g(r){return decodeURIComponent(atob(r).replace(/(.)/g,(o,e)=>{let t=e.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t}))}function f(r){let o=r.replace(/-/g,"+").replace(/_/g,"/");switch(o.length%4){case 0:break;case 2:o+="==";break;case 3:o+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return g(o)}catch{return atob(o)}}function d(r,o){if(typeof r!="string")throw new n("Invalid token specified: must be a string");o||(o={});let e=o.header===!0?0:1,t=r.split(".")[e];if(typeof t!="string")throw new n(`Invalid token specified: missing part #${e+1}`);let s;try{s=f(t)}catch(i){throw new n(`Invalid token specified: invalid base64 for part #${e+1} (${i.message})`)}try{return JSON.parse(s)}catch(i){throw new n(`Invalid token specified: invalid json for part #${e+1} (${i.message})`)}}var I=(()=>{class r{constructor(e,t){this.http=e,this.router=t,this.baseUrl="http://localhost:4444/api",console.log("ApiService")}get(e){return this.http.get(`${this.baseUrl}/${e}`)}post(e,t){return this.http.post(`${this.baseUrl}/${e}`,t).pipe(c(s=>(console.error("Error:====",s),a(s))))}put(e,t){return this.http.put(`${this.baseUrl}/${e}`,t).pipe(c(this.handleError))}handleError(e){let t="";return e.error instanceof ErrorEvent?t=`Error: ${e.error.message}`:(t=`Error Code: ${e.status}
Message: ${e.message}`,e.status===409&&(t="Conflict: The request could not be completed due to a conflict with the current state of the target resource.")),a(t)}delete(e){return this.http.delete(`${this.baseUrl}/${e}`)}setToken(e){localStorage.setItem("token",e)}getToken(){return localStorage.getItem("token")}getDecodedToken(){let e=this.getToken();if(e)try{return d(e)}catch{return console.error("Invalid token"),null}return null}isLoggedIn(){return this.getToken()!==null}logout(){localStorage.removeItem("token"),this.router.navigate(["login"])}static{this.\u0275fac=function(t){return new(t||r)(l(h),l(u))}}static{this.\u0275prov=p({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();export{I as a};
